% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Module_NetworkModule.R
\name{NetworkModule}
\alias{NetworkModule}
\alias{NetworkModuleUI}
\title{NetworkModule}
\usage{
NetworkModule(input, output, session, values = reactiveValues(Networks =
  Networks), reactives = reactive({     list(active = T, highlights =
  integer(0)) }), static = list(noSelection = T), keys = reactive({    
  "NO" }))

NetworkModuleUI(id)
}
\arguments{
\item{input}{arguments necessary for use with 
\code{\link[shiny]{callModule}()}}

\item{output}{arguments necessary for use with 
\code{\link[shiny]{callModule}()}}

\item{session}{arguments necessary for use with 
\code{\link[shiny]{callModule}()}}

\item{values}{a \code{\link[shiny]{reactiveValues}} object that in effect 
gives read and write access to external objects}

\item{reactives}{a list, wrapped in a \code{\link[shiny]{reactive}()} 
expression with settings for this module. See \code{details}.}

\item{static}{a list of arguments that are not in a reactive context 
and hence do not change while the app is running.}

\item{keys}{\code{reactive({})} that reports the current key press}

\item{id}{id to be used to define a namespace via  \code{\link[shiny]{NS}()} 
(must match \code{id} in \code{\link[shiny]{callModule}} 
for the server Module)}
}
\value{
Returns its internalValues
}
\description{
Visualize and interact with molecular networks
}
\details{
TODO: standardize and split/simplify this module
}
\section{Functions}{
\itemize{
\item \code{NetworkModule}: server logic

\item \code{NetworkModuleUI}: UI elements
}}

\seealso{
\code{\link{values}} for a description of the \code{values} object
}
