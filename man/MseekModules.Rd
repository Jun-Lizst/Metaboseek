% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Module_documentation.R
\name{MseekModules}
\alias{MseekModules}
\alias{MseekModulesUI}
\title{MseekModules}
\usage{
MseekModules(input, output, session, values, reactives, ...)

MseekModulesUI(id)
}
\arguments{
\item{input, output, session}{arguments necessary for use with \link[shiny]{callModule}()}

\item{values}{a \link[shiny]{reactiveValues} object that in effect gives read and write access to external objects}

\item{reactives}{a list, wrapped in a \link[shiny]{reactive}() expression with settings for this module. See \code{details}.}

\item{...}{additional arguments, as defined for the individual module. For example: constant layout options depending on the context that this module is used in}

\item{id}{id to be used to define a namespace via  \link[shiny]{NS}() (must match \code{id} in \link[shiny]{callModule} for the server Module)}
}
\description{
Regular modules in Metaboseek take a `shiny::reactiveValues` object called `values` as their first argument.
 `values` is the primary interface allowing communication between modules and is generated by `MseekMinimalServer()`.
  Modules expect this input to work properly, and will only work in shiny apps that provide the proper environment set up by `MseekMinimalServer()`.
}
\section{Functions}{
\itemize{
\item \code{MseekModules}: generic server logic example for MseekModules

\item \code{MseekModulesUI}: generic UI example for MseekModules
}}

