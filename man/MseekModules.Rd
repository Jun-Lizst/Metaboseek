% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Documentation_templates.R
\name{MseekModules}
\alias{MseekModules}
\alias{MseekModulesUI}
\title{MseekModules}
\usage{
MseekModules(input, output, session, values, reactives, static, keys, ...)

MseekModulesUI(id)
}
\arguments{
\item{input, output, session}{arguments necessary for use with 
\code{\link[shiny]{callModule}()}}

\item{values}{a \code{\link[shiny]{reactiveValues}} object that in effect 
gives read and write access to external objects}

\item{reactives}{a list, wrapped in a \code{\link[shiny]{reactive}()} 
expression with settings for this module. See \code{details}.}

\item{static}{a list of arguments that are not in a reactive context 
and hence do not change while the app is running.}

\item{keys}{\code{reactive({})} that reports the current key press. 
This argument is deprecated and will be removed from all modules.}

\item{...}{additional arguments, as defined for the individual module. 
For example: constant layout options depending on the context that this 
module is used in}

\item{id}{id to be used to define a namespace via  \code{\link[shiny]{NS}()} 
(must match \code{id} in \code{\link[shiny]{callModule}} 
for the server Module)}
}
\value{
If the server module for this Module returns something,
 it is described in \code{Details}.
}
\description{
Regular modules in Metaboseek take a 
\code{shiny::reactiveValues} object called \code{values} as their 
first argument.
 \code{values} is the primary interface allowing communication between 
 modules and is generated by \code{\link{MseekMinimalServer}()}.
  Modules expect this input to work properly, and will only work in shiny 
  apps that provide the proper environment set up by 
  \code{\link{MseekMinimalServer}()}.
}
\section{Functions}{
\itemize{
\item \code{MseekModules}: generic server logic example for MseekModules

\item \code{MseekModulesUI}: generic UI example for MseekModules
}}

\seealso{
\code{\link{values}} for a description of the \code{values} object
}
