% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Widget_xcmsWidget.R
\name{xcmsWidget}
\alias{xcmsWidget}
\alias{xcmsWidgetUI}
\title{xcmsWidget}
\usage{
xcmsWidget(input, output, session, externalFilegroups = reactive({    
  NULL }), static = list(servermode = F, rootpath =
  .MseekOptions$filePaths, activateXCMS = T, filePattern =
  .MseekOptions$filePattern, defaultSettings = "Metaboseek_defaults"))

xcmsWidgetUI(id)
}
\arguments{
\item{input}{arguments necessary for use with 
\code{\link[shiny]{callModule}()}}

\item{output}{arguments necessary for use with 
\code{\link[shiny]{callModule}()}}

\item{session}{arguments necessary for use with 
\code{\link[shiny]{callModule}()}}

\item{externalFilegroups}{A data.frame with columns \code{File}
and \code{Group}, specifying files to analyze by xcms. Will be ignored if 
files were loaded from within the xcmsWidget.}

\item{static}{a list of arguments that are not in a reactive context 
and hence do not change while the app is running.}

\item{id}{id to be used to define a namespace via  \code{\link[shiny]{NS}()}
(must match \code{id} in \code{\link[shiny]{callModule}} 
for the server Module)}
}
\value{
Returns nothing
}
\description{
server module for accessing the xcms data analysis workflow
}
\section{Functions}{
\itemize{
\item \code{xcmsWidget}: Server logic

\item \code{xcmsWidgetUI}: UI elements
}}

\examples{
\dontrun{
library(shiny)

ui <- xcmsWidgetUI("xcmsGUI")

server <- function(input, output) {
  
  callModule(xcmsWidget, "xcmsGUI", 
             static = list(servermode = F,
                           rootpath = .MseekOptions$filePaths,
                           activateXCMS = T,
                           filePattern = .MseekOptions$filePattern))
}
# Create Shiny app ----
shinyApp(ui, server)

}

}
